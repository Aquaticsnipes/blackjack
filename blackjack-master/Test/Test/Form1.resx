<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DeckBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HCDhhwQAFS1exJhR40aOHT1alBgQADs=
</value>
  </data>
</root>